---
swagger: "2.0"
info:
  description: "A REST service that allows to create read and update a virtual directory\n"
  version: "0.0.1"
  title: "Virtual Directory REST Service Using Swagger"
  contact:
    name: "Cloudmesh virtual directory REST service"
host: "localhost:8080"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /dir/{dir_name}:
    get:
      tags:
      - "default_controller"
      description: "Returns a list of files in the directory dir_name"
      operationId: "controllers.default_controller.get_dir_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "dir_name"
        in: "path"
        description: "name of the directory to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "A list of files"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/File"
    post:
      tags:
      - "default_controller"
      description: "create/update a directory with the directory name dir_name"
      operationId: "controllers.default_controller.create_dir"
      produces:
      - "application/json"
      parameters:
      - name: "dir_name"
        in: "path"
        description: "name of the directory to be created"
        required: true
        type: "string"
      responses:
        201:
          description: "directory created/updated"
          schema:
            $ref: "#/definitions/Dir"
  /dirs:
    get:
      tags:
      - "default_controller"
      description: "Returns a list of all directories"
      operationId: "controllers.default_controller.dirs_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "a list of Dirs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Dir"
definitions:
  Dir:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      parent_directory:
        type: "string"
      files:
        type: "array"
        items:
          $ref: "#/definitions/File"
  File:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      parent_directory:
        type: "string"
      endpoint:
        type: "string"
